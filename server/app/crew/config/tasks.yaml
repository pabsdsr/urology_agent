query_task:
  description: >
    For the given {query}:
    1. Analyze the user's question to identify key concepts and information needs.
    2. Reformulate the question into a semantic search query that will match relevant content.
    3. Ensure the query captures the core meaning while being general enough to match similar content.
  expected_output: >
    A clear, concise semantic search query based on the user's {query}.
  agent: query_agent

rag_task:
  description: >
    1. Use the QdrantVectorSearchTool with the following parameters:
        - query: {query_task.output}
        - filter_by: "patient_id"
        - filter_value: "{id}"
    2. Analyze the semantic query generated by the query_task and available context chunks
    3. Identify the most relevant information in the chunks
    4. Use the information to answer the query and synthesize information into a coherent answer
  expected_output: >
    A concise, well-structured answer to the user's question, supported directly by the retrieved
    context. If the context does not provide enough information or the answer cannot be found, 
    apologize and say there is not enough information or no relevant information to answer the question.
  agent: rag_agent
  depends_on: [query_task]


# rag_task:
#   description: >
#     For the given patient {id}:
#     1. Take the semantic query generated by query_task
#     2. Use the QdrantVectorSearchTool with the following parameters:
#         - query: {query_task.output}
#         - filter_by: "patient_id"
#         - filter_value: "{id}"
#     3. Search for information relevant to the query about the specific patient
#     4. Evaluate if the retrieved information meaningfully answers the {query}
#     5. Return the most relevant content found
#   expected_output: >
#     - Relevant content about {query} for patient {id} if found
#     - "No data for this patient found" if no files were found corresponding to the {id}
#     - "No relevant information found" if no meaningful matches exist for the query
#   agent: rag_agent
#   depends_on: [query_task]


# llm_task:
#   description: >
#     Use the content generated by the rag_agent during the rag_task and answer the {query} to best 
#     of your ability. 
#   expected_output: >
#     The answer about {query} in a clear and concise manner. Do not return raw data from the rag_agent
#     under any circumstances.
#   agent: llm_agent
